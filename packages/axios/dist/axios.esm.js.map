{"version":3,"file":"axios.esm.js","sources":["../lib/helpers/util.ts","../lib/helpers/url.ts","../lib/helpers/headers.ts","../lib/core/transform.ts","../lib/core/dispatchRequest.ts","../lib/core/InterceptorManager.ts","../lib/core/mergeConfig.ts","../lib/core/Axios.ts","../lib/helpers/data.ts","../lib/helpers/error.ts","../lib/adapters/xhr.ts","../lib/adapters/index.ts","../lib/defaults/index.ts","../lib/axios.ts"],"sourcesContent":["const toString = Object.prototype.toString\n\nexport function isDate(val: any): val is Date {\n  return toString.call(val) === '[object Date]'\n}\n\nexport function isObject(val: any): val is Record<string, unknown> {\n  return toString.call(val) === '[object Object]'\n}\n\nexport function extend<T, U extends Record<string, any>>(\n  target: T,\n  source: U,\n  ownKeys?: boolean,\n) {\n  const iterator = ownKeys ? Object.keys : Object.getOwnPropertyNames\n\n  iterator(source).forEach((key) => {\n    target[key as keyof T] = source[key]\n  })\n\n  return target as T & U\n}\n\nexport function merge(...objs: any[]): any {\n  const result = Object.create(null)\n\n  for (let i = 0; i < objs.length; i++) {\n    const obj = objs[i]\n    for (const key in obj) {\n      assignValue(obj[key], key)\n    }\n  }\n\n  function assignValue(val: any, key: string) {\n    if (isObject(result[key]) && isObject(val)) {\n      result[key] = merge(result[key], val)\n    } else if (isObject(val)) {\n      result[key] = merge({}, val)\n    } else {\n      result[key] = val\n    }\n  }\n  return result\n}\n","import { isDate, isObject } from './util'\n\nfunction encode(val: string): string {\n  return encodeURIComponent(val)\n    .replace(/%40/g, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\n/**\n * 处理 URL 参数\n * 1. 拼接普通参数 /get?a=1&b=2\n * 2. 数组参数 /get?arr[]=1&arr[]=2\n * 3. 对象参数 /get?foo=%7B%22bar%22:%22baz%22%7D (foo 后面拼接的是 {\"bar\":\"baz\"}encode 后的结果。)\n * 4. 参数为 Date 对象 /get?date=2019-07-24T04:46:41.05190Z\n * 5. 参数包括特殊字符 /get?foo=@:$+\n * 6. 参数包括 null 或 undefined （被忽略）\n * 7. 存在 hash 标记 (哈希被忽略)\n * 8. 拼接已存在的参数\n * @param url 用户传递的 URL 字符串\n * @param params get 参数\n * @returns\n */\nexport function buildURL(url: string, params?: any) {\n  if (!params) return url\n\n  if (url.includes('#')) {\n    const hashIndex = url.indexOf('#')\n\n    if (hashIndex !== -1) {\n      return url.slice(0, hashIndex)\n    }\n  }\n\n  // 键值对数组，用于最后拼接 URL ['a=1', 'b=2']\n  const keyMap: string[] = []\n\n  Object.keys(params).forEach((key) => {\n    const val = params[key]\n\n    if (val == null) return\n\n    let values: string[]\n\n    if (Array.isArray(val)) {\n      values = val\n      key += '[]'\n    } else {\n      values = [val]\n    }\n\n    values.forEach((val) => {\n      if (isDate(val)) {\n        val = val.toISOString()\n      } else if (isObject(val)) {\n        val = JSON.stringify(val)\n      }\n      keyMap.push(`${encode(key)}=${encode(val)}`)\n    })\n  })\n\n  const serializedParams = keyMap.join('&')\n\n  if (serializedParams) {\n    url += (url.includes('?') ? '&' : '?') + serializedParams\n  }\n\n  return url\n}\n","import { Method } from '../types'\nimport { isObject, merge } from './util'\n\nfunction normalizeHeaderName(headers: any, normalizedName: string) {\n  Object.keys(headers).forEach((headerName) => {\n    if (\n      headerName !== normalizedName &&\n      headerName.toLowerCase() === normalizedName.toLowerCase()\n    ) {\n      headers[normalizedName] = headers[headerName]\n      delete headers[headerName]\n    }\n  })\n}\n\nexport function processHeaders(headers: any, data: any) {\n  normalizeHeaderName(headers, 'Content-Type')\n\n  // 给带数据的请求设置默认的 Content-Type\n  if (isObject(data)) {\n    if (headers && !headers['Content-Type']) {\n      headers['Content-Type'] = 'application/json;charset=utf-8'\n    }\n  }\n\n  return headers\n}\n\nexport function parseHeaders(headers: string) {\n  if (!headers) return\n  const res = Object.create(null)\n\n  headers.split('\\r\\n').forEach((line) => {\n    let [key, value] = line.split(':')\n\n    if (!key) return\n\n    key = key.toLowerCase()\n    value = value?.trim()\n\n    res[key] = value\n  })\n\n  return res\n}\n\nexport function flattenHeaders(headers: any, method: Method) {\n  if (!headers) {\n    return headers\n  }\n  headers = merge(headers.common || {}, headers[method] || {}, headers)\n\n  const methodsToDelete = [\n    'delete',\n    'get',\n    'head',\n    'options',\n    'post',\n    'put',\n    'patch',\n    'common',\n  ]\n\n  methodsToDelete.forEach((method) => {\n    delete headers[method]\n  })\n\n  return headers\n}\n","import { AxiosTransformer } from '../types/index'\n\nexport function transform(\n  data: any,\n  headers: any,\n  transformers?: AxiosTransformer | AxiosTransformer[],\n) {\n  if (!transformers) {\n    return data\n  }\n\n  transformers = Array.isArray(transformers) ? transformers : [transformers]\n  transformers.forEach((transformer) => {\n    data = transformer(data, headers)\n  })\n\n  return data\n}\n","import type { AxiosRequestConfig } from '../types'\nimport { buildURL } from '../helpers/url'\nimport xhr from './xhr'\nimport { flattenHeaders, processHeaders } from '../helpers/headers'\nimport { transform } from './transform'\n\nfunction axios(config: AxiosRequestConfig) {\n  processConfig(config)\n  const adapter = config.adapter!\n  return adapter(config)\n}\n\n// 对配置进行处理\nfunction processConfig(config: AxiosRequestConfig) {\n  // 对 URL 进行处理\n  config.url = transformURL(config)\n\n  // 处理请求数据\n  config.data = transform(config.data, config.headers, config.transformRequest)\n  config.headers = flattenHeaders(config.headers, config.method!)\n}\n\nfunction transformURL({ url, params }: AxiosRequestConfig) {\n  return url && buildURL(url, params)\n}\n\nfunction transformHeaders({ headers = {}, data }: AxiosRequestConfig) {\n  return processHeaders(headers, data)\n}\n\nexport default axios\n","import { RejectedFn, ResolvedFn } from '../types'\n\nexport interface Interceptor<T> {\n  resolved: ResolvedFn<T>\n  rejected?: RejectedFn\n}\n\nexport class InterceptorManager<T> {\n  public interceptors: Array<Interceptor<T> | null>\n\n  constructor() {\n    this.interceptors = []\n  }\n\n  use(resolved: ResolvedFn<T>, rejected?: RejectedFn) {\n    this.interceptors.push({\n      resolved,\n      rejected,\n    })\n\n    return this.interceptors.length - 1\n  }\n\n  eject(id: number) {\n    if (this.interceptors?.[id]) {\n      // 移除拦截器，但是坑还留着\n      this.interceptors[id] = null\n    }\n  }\n}\n","import { isObject, merge } from '../helpers/util'\nimport { AxiosRequestConfig } from '../types'\n\nexport default function mergeConfig(\n  defaultConfig: AxiosRequestConfig,\n  userConfig?: AxiosRequestConfig,\n): AxiosRequestConfig {\n  const config = Object.create(null) // 创建空对象，作为最终的结果\n  userConfig = userConfig || {}\n\n  function getMergedValue(target: any, source: any) {\n    if (isObject(target) && isObject(source)) {\n      return merge(target, source)\n    } else if (isObject(source)) {\n      return merge({}, source)\n    } else if (Array.isArray(source)) {\n      return source.slice()\n    }\n    return source\n  }\n\n  // 策略一：只接受用户配置,不管默认配置对象里面有没有\n  function valueFromUserConfig(prop: MergeKeys) {\n    if (userConfig?.[prop]) {\n      return getMergedValue(undefined, userConfig[prop])\n    }\n  }\n\n  // 策略二：用户配置了就用用户配置的，如果用户没配置，则用默认配置的\n  function defaultToUserConfig(prop: MergeKeys) {\n    return getMergedValue(\n      undefined,\n      userConfig?.[prop] ? userConfig[prop] : defaultConfig[prop],\n    )\n  }\n\n  // 策略三：深度合并（比如header对象）\n  function mergeDeepProperties(prop: MergeKeys) {\n    if (userConfig?.[prop]) {\n      return getMergedValue(defaultConfig[prop], userConfig[prop])\n    }\n\n    return getMergedValue(undefined, defaultConfig[prop])\n  }\n\n  // 策略类\n  const mergeMap = {\n    url: valueFromUserConfig,\n    method: valueFromUserConfig,\n    data: valueFromUserConfig,\n\n    baseURL: defaultToUserConfig,\n    transformRequest: defaultToUserConfig,\n    transformResponse: defaultToUserConfig,\n    timeout: defaultToUserConfig,\n    withCredentials: defaultToUserConfig,\n    adapter: defaultToUserConfig,\n    responseType: defaultToUserConfig,\n\n    headers: mergeDeepProperties,\n  }\n\n  type MergeKeys = keyof typeof mergeMap\n\n  // 策略分发\n  const defaultConfigKeys = Reflect.ownKeys(defaultConfig)\n  const userConfigKeys = Reflect.ownKeys(userConfig)\n\n  // key 去重\n  const mergeKeys = [\n    ...new Set([...defaultConfigKeys, ...userConfigKeys]),\n  ] as MergeKeys[]\n\n  mergeKeys.forEach((prop) => {\n    const strategy = mergeMap[prop]\n    const configValue = strategy(prop)\n\n    config[prop] = configValue\n  })\n\n  return config\n}\n","import {\n  AxiosInterceptorManager,\n  AxiosPromise,\n  AxiosRequestConfig,\n  AxiosResponse,\n  Method,\n  RejectedFn,\n  ResolvedFn,\n} from '../types'\nimport dispatchRequest from './dispatchRequest'\nimport { InterceptorManager } from './InterceptorManager'\nimport mergeConfig from './mergeConfig'\n\ninterface PromiseArr<T = any> {\n  resolved: ResolvedFn<T> | ((config: AxiosRequestConfig) => AxiosPromise<T>)\n  rejected?: RejectedFn\n}\n\nexport default class Axios {\n  interceptors: {\n    request: AxiosInterceptorManager<AxiosRequestConfig>\n    response: AxiosInterceptorManager<AxiosResponse>\n  }\n\n  defaults: AxiosRequestConfig\n\n  constructor(instanceConfig: AxiosRequestConfig) {\n    this.interceptors = {\n      request: new InterceptorManager<AxiosRequestConfig>(),\n      response: new InterceptorManager<AxiosResponse>(),\n    }\n    this.defaults = instanceConfig\n  }\n\n  request(url: any, config?: any): AxiosPromise {\n    config = this._serializeConfig(url, config)\n    // 先存放实际请求\n    const arr: PromiseArr[] = [\n      {\n        resolved: dispatchRequest,\n        rejected: void 0,\n      },\n    ]\n\n    // 将请求拦截器放入数组前面\n    this.interceptors.request.interceptors.forEach((interceptor) => {\n      interceptor && arr.unshift(interceptor)\n    })\n\n    // 将请求拦截器放入数组后面\n    this.interceptors.response.interceptors.forEach((interceptor) => {\n      interceptor && arr.push(interceptor)\n    })\n\n    // 实现链式调用\n    let promise = Promise.resolve(config)\n\n    while (arr.length) {\n      const { resolved, rejected } = arr.shift()!\n      promise = promise.then(resolved, rejected)\n    }\n\n    return promise\n  }\n\n  get(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('get', url, config)\n  }\n\n  delete(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('delete', url, config)\n  }\n\n  head(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('head', url, config)\n  }\n\n  options(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('options', url, config)\n  }\n\n  post(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('post', url, data, config)\n  }\n\n  put(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('put', url, data, config)\n  }\n\n  patch(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('patch', url, data, config)\n  }\n\n  private _requestMethodWithoutData(\n    method: Method,\n    url: string,\n    config?: AxiosRequestConfig,\n  ) {\n    return this.request(\n      Object.assign(config || {}, {\n        method,\n        url,\n      }),\n    )\n  }\n\n  private _requestMethodWithData(\n    method: Method,\n    url: string,\n    data?: any,\n    config?: AxiosRequestConfig,\n  ) {\n    return this.request(\n      Object.assign(config || {}, {\n        method,\n        url,\n        data,\n      }),\n    )\n  }\n\n  private _serializeConfig(url: string, config?: AxiosRequestConfig) {\n    if (typeof url === 'string') {\n      config = config || {}\n      config.url = url\n    } else {\n      config = url\n    }\n\n    // 策略合并\n    config = mergeConfig(this.defaults, config)\n\n    return config\n  }\n}\n","import { isObject } from './util'\n\nexport function transformRequest(data: any): any {\n  if (isObject(data)) {\n    return JSON.stringify(data)\n  }\n  return data\n}\n\nexport function transformResponse(data: any): any {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data)\n    } catch (e) {\n      // do nothing\n    }\n  }\n  return data\n}\n","import { AxiosRequestConfig, AxiosResponse } from '../types/index'\n\nexport class AxiosError extends Error {\n  private config: AxiosRequestConfig\n  private request?: any\n  private code?: string | null | number\n  private response?: AxiosResponse\n\n  constructor(\n    message: string,\n    config: AxiosRequestConfig,\n    request?: any,\n    code?: string | null | number,\n    response?: AxiosResponse,\n  ) {\n    super(message)\n\n    this.config = config\n    this.request = request\n    this.code = code\n    this.response = response\n\n    Object.setPrototypeOf(this, AxiosError.prototype)\n  }\n}\n\nexport function createError(\n  message: string,\n  config: AxiosRequestConfig,\n  code: string | null | number,\n  request?: any,\n  response?: AxiosResponse,\n) {\n  return new AxiosError(message, config, code, request, response)\n}\n","import { AxiosPromise, AxiosRequestConfig } from '../types'\nimport { AxiosResponse } from '../types/index'\nimport { transformResponse } from '../helpers/data'\nimport { parseHeaders } from '../helpers/headers'\nimport { createError } from '../helpers/error'\n\nexport default function xhrAdapter(config: AxiosRequestConfig): AxiosPromise {\n  return new Promise((resolve, reject) => {\n    const {\n      url,\n      method = 'get',\n      data = null,\n      headers,\n      responseType,\n      timeout,\n    } = config\n    const request = new XMLHttpRequest()\n\n    request.open(method.toUpperCase(), url!)\n\n    // 设置 header\n    Object.keys(headers).forEach((key) => {\n      if (data === null && key.toLowerCase() === 'content-type') {\n        delete headers[key]\n      }\n\n      request.setRequestHeader(key, headers[key])\n    })\n\n    // 设置响应类型\n    if (responseType) {\n      request.responseType = responseType\n    }\n\n    if (timeout) {\n      request.timeout = timeout\n    }\n\n    // 发送数据\n    request.send(data)\n\n    // 监听事件\n    request.onreadystatechange = function handleLoad() {\n      if (request.readyState !== 4 || request.status === 0) {\n        return\n      }\n\n      const responseData =\n        responseType && responseType !== 'text'\n          ? request.response\n          : request.responseText\n\n      const response: AxiosResponse = {\n        data: transformResponse(responseData),\n        status: request.status,\n        statusText: request.statusText,\n        headers: parseHeaders(request.getAllResponseHeaders()),\n        config,\n        request,\n      }\n\n      handleResponse(response)\n\n      function handleResponse(response: AxiosResponse): void {\n        if (response.status >= 200 && response.status < 300) {\n          resolve(response)\n        } else {\n          reject(\n            createError(\n              `Request failed with status code ${response.status}`,\n              config,\n              null,\n              request.status,\n              response,\n            ),\n          )\n        }\n      }\n    }\n\n    // 监听网络错误事件\n    request.onerror = function () {\n      reject(createError('Net Error', config, null, request))\n    }\n\n    // 监听超时事件\n    request.ontimeout = function () {\n      reject(\n        createError(\n          `Timeout of ${timeout} ms exceeded`,\n          config,\n          'TIMEOUT',\n          request,\n        ),\n      )\n    }\n  })\n}\n","import xhrAdapter from './xhr'\n\nexport const adapters = {\n  xhr: xhrAdapter,\n  http: xhrAdapter, // 暂未实现 node 端的请求，暂且用 xhr 代替\n} as const\n","import { adapters } from '../adapters'\nimport { transformRequest, transformResponse } from '../helpers/data'\nimport { processHeaders } from '../helpers/headers'\nimport { AxiosAdapter, AxiosRequestConfig } from '../types'\n\n// 请求带数据的默认 MIME 类型\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded',\n}\n\n// 适配器，当前库可以适配客户端（浏览器）和服务端\nfunction getDefaultAdapter(): AxiosAdapter {\n  let adapter\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = adapters['xhr']\n  } else if (\n    typeof process !== 'undefined' &&\n    Object.prototype.toString.call(process) === '[object process]'\n  ) {\n    // For node use HTTP adapter\n    adapter = adapters['http']\n  }\n  return adapter as AxiosAdapter\n}\n\nexport const defaults: AxiosRequestConfig = {\n  adapter: getDefaultAdapter(),\n  timeout: 0,\n  headers: {\n    common: {\n      Accept: 'application/json, text/plain, */*',\n    },\n  },\n  // 转换请求数据（默认转换 JSON 格式数据，且只针对 put、post、patch 的请求）\n  transformRequest: [\n    function (data, headers) {\n      processHeaders(headers, data)\n      return transformRequest(data)\n    },\n  ],\n  // 转换响应数据，默认解析 JSON 数据\n  transformResponse: [\n    function (data) {\n      return transformResponse(data)\n    },\n  ],\n}\n\n// 不带数据的请求方法\nconst methodsWithNoData = ['delete', 'get', 'head']\n\n// 带数据的请求方法\nconst methodsWithData = ['post', 'patch', 'put']\n\nmethodsWithNoData.forEach((method) => {\n  defaults.headers[method] = {}\n})\n\nmethodsWithData.forEach((method) => {\n  defaults.headers[method] = { ...DEFAULT_CONTENT_TYPE }\n})\n","import Axios from './core/Axios'\nimport { AxiosInstance, AxiosRequestConfig } from './types'\nimport { extend } from './helpers/util'\nimport { defaults } from './defaults'\n\nfunction createInstance(defaultConfig: AxiosRequestConfig): AxiosInstance {\n  const context = new Axios(defaultConfig)\n\n  // 可以通过函数调用\n  const instance = Axios.prototype.request.bind(context)\n\n  // 拓展请求方法：axios.get, axios.post ...\n  extend(instance, Object.getPrototypeOf(context), false)\n  extend(instance, context, true)\n\n  return instance as AxiosInstance\n}\n\nconst axios = createInstance(defaults)\n\nexport default axios\n"],"names":["axios","dispatchRequest"],"mappings":"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"}